{"version":3,"sources":["service/firebase.js","components/Header.js","models/Todo.js","components/TodoItem.js","components/TodoList.js","components/TodoForm.js","components/TodoTools.js","components/TodoContainer.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","Header","props","updateAuthStatus","value","handleChange","e","setState","target","name","handleSubmit","state","formMode","signUp","signIn","email","password","hideForm","createUserWithEmailAndPassword","then","userCred","console","log","signInWithEmailAndPassword","user","logOut","signOut","openForm","mode","onAuthStateChanged","currentUser","authLinks","this","userLoggedIn","key","className","id","onClick","title","style","display","placeholder","type","onChange","React","Component","Todo","important","daily","notes","prototype","completed","TodoItem","handleDelete","deleteTodo","details","handleToggleComplete","toggleCompleteTodo","toggleNotes","notesOpen","notesInput","handleNotesClick","parentElement","children","notesInputFocus","focus","setSelectionRange","length","handleBlur","updateNotes","fontWeight","autoFocus","onBlur","TodoList","todoItemComponents","todoItems","map","todo","index","TodoForm","preventDefault","addTodo","htmlFor","TodoTools","toggleVisibility","hidden","resetDailyTasks","stopPropagation","filterMode","getAllTasks","getDailyTasks","getImportantTasks","getCompletedTasks","TodoContainer","collection","add","uid","newTodoRef","push","filter","doc","delete","update","catch","where","orderBy","get","result","docs","data","newTodo","filterTasks","batch","forEach","todoRef","commit","att","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.0c951219.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';;\r\n\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyCT3sqrLhk8JLRCBY3e3B8Mzh7pb_7BI14\",\r\n    authDomain: \"todo-35f31.firebaseapp.com\",\r\n    databaseURL: \"https://todo-35f31.firebaseio.com\",\r\n    projectId: \"todo-35f31\",\r\n    storageBucket: \"todo-35f31.appspot.com\",\r\n    messagingSenderId: \"622139677751\",\r\n    appId: \"1:622139677751:web:646c1cc0220f10520033b2\"\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst auth = firebase.auth();\r\n\r\nexport {db, auth};\r\n\r\n","import React from 'react';\r\n\r\n//AUTH\r\nimport {auth} from '../service/firebase';\r\n\r\n//CSS\r\nimport '../css/header.css';\r\n\r\nclass Header extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            hideForm: true,\r\n            formMode: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        auth.onAuthStateChanged(user => {\r\n            if(user){\r\n                // this.setState({ userLoggedIn: true})\r\n                this.updateAuthStatus(true);\r\n            }else{\r\n                // this.setState({ userLoggedIn: false});\r\n                this.updateAuthStatus(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    updateAuthStatus = (value) => {\r\n        this.props.updateAuthStatus(value);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if(this.state.formMode === \"Sign Up\"){\r\n            this.signUp();\r\n        }else if(this.state.formMode === \"Log In\"){\r\n            this.signIn();\r\n        }\r\n        this.setState({\r\n            email: '',\r\n            password: '',\r\n            hideForm: true,\r\n            formMode: ''\r\n        })\r\n        \r\n    }\r\n\r\n    signUp = () => {\r\n        auth.createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n        .then(userCred => {\r\n            console.log(\"Sign Up Successful\");\r\n        });\r\n    }\r\n\r\n    signIn = () => {\r\n        auth.signInWithEmailAndPassword(this.state.email, this.state.password)\r\n        .then(user => console.log(\"Log In Successful\"));\r\n    }\r\n\r\n    logOut = () => {\r\n        auth.signOut()\r\n        .then(() => console.log(\"Logged Out\"));\r\n    }\r\n\r\n    openForm = (mode) => {\r\n        if(mode === \"signUp\"){\r\n            this.setState({\r\n                hideForm: false,\r\n                formMode: \"Sign Up\"\r\n            })\r\n        }else if(mode === \"logIn\"){\r\n            this.setState({\r\n                hideForm: false,\r\n                formMode: \"Log In\"\r\n            })\r\n        }else if(mode === \"logOut\"){\r\n            this.logOut();\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        const currentUser = auth.currentUser;\r\n        const authLinks = this.props.userLoggedIn ? \r\n            [<li key=\"user\" className=\"navbar-button fas fa-user\" id=\"navbar-user-info\">\r\n                <div>\r\n                    <span>Signed in as:</span>\r\n                    <span>{currentUser.email}</span>\r\n                </div>\r\n            </li>,\r\n            <li key=\"logOut\" className=\"navbar-button\" onClick={() => this.openForm(\"logOut\")}>Log Out</li>] \r\n            : \r\n            [<li key=\"signUp\" className=\"navbar-button\" onClick={() => this.openForm(\"signUp\")}>Sign Up</li>,\r\n            <li key=\"signIn\" className=\"navbar-button\" onClick={() => this.openForm(\"logIn\")}>Log In</li>];\r\n\r\n        return(\r\n            <header id=\"app-header\">\r\n                <h1 id=\"app-title\"><i className=\"fas fa-list\"></i> {this.props.title}</h1>\r\n                <nav id=\"navbar\">\r\n                    <ul id=\"navbar-list\">\r\n                        {authLinks}\r\n                    </ul>\r\n                </nav>\r\n                <div id=\"auth-form-container\" style={{display: this.state.hideForm ? \"none\" : \"block\"}}>\r\n                    <div id=\"auth-form\">\r\n                        <i className=\"fas fa-times\" id=\"close-auth-form\" onClick={() => this.setState({hideForm: true, formMode: ''})}></i>\r\n                        <h1 id=\"auth-form-title\">{this.state.formMode}</h1>\r\n                            <input \r\n                                placeholder=\"Email\" \r\n                                value={this.state.email} \r\n                                type=\"email\" name=\"email\" \r\n                                className=\"auth-form-input\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <input\r\n                                placeholder=\"Password\" \r\n                                value={this.state.password} \r\n                                type=\"password\" name=\"password\" \r\n                                className=\"auth-form-input\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <button id=\"auth-form-button\" onClick={this.handleSubmit}>{this.state.formMode}</button>\r\n                    </div>\r\n                </div>\r\n               \r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","function Todo(id, title, important, daily, notes){\r\n    this.id = id;\r\n    this.title = title;\r\n    this.important = important;\r\n    this.daily = daily;\r\n    this.notes = notes;\r\n}\r\n\r\nTodo.prototype.completed = false;\r\n\r\nexport default Todo;","import React from 'react';\r\n\r\nclass TodoItem extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            notesOpen: false,\r\n            notesInputFocus: false,\r\n            notesInput: this.props.details.notes\r\n        }\r\n    }\r\n\r\n    handleDelete = () => {\r\n        this.props.deleteTodo(this.props.details.id);\r\n        \r\n    }\r\n\r\n    handleToggleComplete = () => {\r\n        this.props.toggleCompleteTodo(this.props.details.id);\r\n    }\r\n\r\n    toggleNotes = () => {\r\n        this.setState(state => ({\r\n            notesOpen: !state.notesOpen\r\n        }))\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            notesInput: e.target.value\r\n        })\r\n    }\r\n\r\n    handleNotesClick = (e) => {\r\n\r\n        const notesInput = e.target.parentElement.children[1];\r\n        this.setState({notesInputFocus: true}, () => {\r\n            notesInput.focus();\r\n            // Puts cursor on the end of input\r\n            notesInput.setSelectionRange(notesInput.value.length, notesInput.value.length);\r\n        });\r\n    }\r\n\r\n    handleBlur = () => {\r\n        this.setState({notesInputFocus: false});\r\n        this.props.updateNotes(this.props.details.id, this.state.notesInput);\r\n    }\r\n\r\n    render(){\r\n        const {title, important, daily, completed} = this.props.details;\r\n        return(\r\n            \r\n            <div className=\"todo-item\" style={{fontWeight: important ? \"bolder\" : \"normal\"}}>\r\n                <button onClick={this.handleToggleComplete}\r\n                    className={completed ? \"fas fa-check checkbox-checked\" : \"fas fa-check checkbox\"}\r\n                ></button>\r\n                <span className=\"todo-title\">{title}{daily ? <i className=\"fas fa-calendar-alt daily-mark\"></i> : null}</span>\r\n                <button className=\"fas fa-chevron-down open-notes-btn\" onClick={this.toggleNotes}></button>\r\n                <button onClick={this.handleDelete} className=\"delete-todo-btn fas fa-trash\"></button>\r\n                <div className=\"todo-notes\" style={{display: this.state.notesOpen ? \"block\" : \"none\"}}>\r\n                    <span className=\"notes-content\" style={{display: this.state.notesInputFocus ? \"none\" : \"block\"}} onClick={this.handleNotesClick}>\r\n                        {this.state.notesInput}\r\n                    </span>\r\n                    <textarea\r\n                        style={{display: this.state.notesInputFocus ? \"block\" : \"none\"}} \r\n                        autoFocus={true}\r\n                        className=\"todo-notes-input\" \r\n                        value={this.state.notesInput}\r\n                        onBlur={this.handleBlur}\r\n                        onChange={this.handleChange}>\r\n                    </textarea>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoItem;","import React from 'react';\r\n\r\nimport TodoItem from './TodoItem';\r\n\r\n// CSS\r\nimport '../css/todo-list.css';\r\n\r\nclass TodoList extends React.Component {\r\n    render(){\r\n        const todoItemComponents = this.props.todoItems.map((todo, index) => {\r\n            return <TodoItem \r\n                details={todo} key={todo.id} \r\n                deleteTodo={this.props.deleteTodo} \r\n                toggleCompleteTodo={this.props.toggleCompleteTodo}\r\n                updateNotes={this.props.updateNotes}    \r\n                />\r\n        })\r\n        return(\r\n            <div id=\"todo-list\">\r\n                {todoItemComponents}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nimport '../css/todo-form.css';\r\n\r\nclass TodoForm extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            title: \"\",\r\n            important: false,\r\n            daily: false,\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        if(e.target.type !== \"button\"){ // handles text inputs\r\n            this.setState({title: e.target.value});\r\n        }else{\r\n            this.setState({[e.target.name]: !this.state[e.target.name]})\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        if(this.state.title === ''){\r\n            console.log(\"Please enter a value\");\r\n            return;\r\n        };\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state);\r\n        this.setState({\r\n            title: \"\",\r\n            important: false,\r\n            daily: false,\r\n        })\r\n    }\r\n    render(){\r\n        const {title, important, daily} = this.state;\r\n        return(\r\n            <form id=\"todo-form\">\r\n                <label htmlFor=\"title\" id=\"title-input-container\">\r\n                    <input id=\"title\" name=\"title\" type=\"text\" placeholder=\"Enter Todo Title\" value={title} onChange={this.handleChange}/>\r\n                </label>\r\n                \r\n\r\n                <button id=\"important-form-btn\" name=\"important\" type=\"button\" \r\n                    onClick={this.handleChange} \r\n                    className={important ? \"fas fa-exclamation\" : \"fas fa-times\"}\r\n                    title={important ? \"Mark un-important\" : \"Mark important\"}\r\n                ></button>\r\n\r\n                <button id=\"daily-form-btn\" name=\"daily\" type=\"button\" \r\n                    onClick={this.handleChange}\r\n                    className={daily ? \"fas fa-calendar-alt\" : \"fas fa-calendar-times\"}\r\n                    title={daily ? \"Unmark as Daily\" : \"Mark as daily\" }\r\n                ></button>\r\n\r\n                <button type=\"submit\" id=\"todo-submit\" onClick={this.handleSubmit}>ADD</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoForm;","import React from 'react';\r\n\r\n// CSS\r\nimport '../css/todo-tools.css';\r\n\r\nclass TodoTools extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hidden: true,\r\n        }\r\n    }\r\n\r\n    toggleVisibility = () => {\r\n        this.setState(state => ({\r\n            hidden: !state.hidden\r\n        }))\r\n    }\r\n\r\n    resetDailyTasks = (e) => {\r\n        e.stopPropagation();\r\n        this.props.resetDailyTasks();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div id=\"todo-tools\" className={this.state.hidden ? \"\" : \"toggle-visible\"}>\r\n                <button className=\"fas fa-bars\" id=\"tools-toggle\" onClick={this.toggleVisibility}></button>\r\n                <div className={`todo-tool ${this.props.filterMode === 'all' ? 'filter' : ''}`} onClick={this.props.getAllTasks}>All Tasks</div>\r\n                <div className={`todo-tool ${this.props.filterMode === 'daily' ? 'filter' : ''}`} onClick={this.props.getDailyTasks}>Daily Tasks <i title=\"Reset\" className=\"fas fa-undo-alt extra-tool\" onClick={this.resetDailyTasks}></i></div>\r\n                <div className={`todo-tool ${this.props.filterMode === 'important' ? 'filter' : ''}`} onClick={this.props.getImportantTasks}>Important Tasks</div>\r\n                <div className={`todo-tool ${this.props.filterMode === 'completed' ? 'filter' : ''}`} onClick={this.props.getCompletedTasks}>Completed Tasks</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoTools;","import React from 'react';\r\nimport Todo from '../models/Todo';\r\n\r\n// Componenets\r\nimport TodoList from './TodoList';\r\nimport TodoForm from './TodoForm';\r\nimport TodoTools from './TodoTools';\r\n\r\n//Database\r\nimport {auth, db} from '../service/firebase';\r\n\r\n// CSS\r\nimport '../css/todo-container.css';\r\n\r\nclass TodoContainer extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            todoItems: [],\r\n            filterMode: 'all'\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        // get data\r\n        this.getAllTasks();\r\n    }\r\n\r\n    addTodo = (todo) => {\r\n        const currentUser = auth.currentUser;\r\n        const todoItems = this.state.todoItems;\r\n        //add todo to firebase\r\n        db.collection('todos').add({\r\n            user: currentUser.uid,\r\n            title: todo.title,\r\n            important: todo.important,\r\n            daily: todo.daily,\r\n            completed: false\r\n        })\r\n        .then((newTodoRef) => {\r\n            todoItems.push(new Todo(newTodoRef.id, todo.title, todo.important, todo.daily));\r\n            this.setState({\r\n                todoItems: todoItems,\r\n            })\r\n        })\r\n        \r\n    }\r\n\r\n    deleteTodo = (id) => {\r\n        const todoItems = this.state.todoItems.filter((todo) => {\r\n            return todo.id !== id;\r\n        });\r\n        db.collection('todos').doc(id).delete()\r\n        \r\n        this.setState({\r\n            todoItems: todoItems,\r\n        })\r\n    }\r\n\r\n    toggleCompleteTodo = (id) => {\r\n        let completed = false;\r\n        const todoItems = this.state.todoItems.map(todo => {\r\n            if(todo.id === id){\r\n                todo.completed = !todo.completed;\r\n                completed = todo.completed;\r\n                return todo;\r\n            }\r\n            return todo;\r\n        })\r\n        db.collection('todos').doc(id).update({completed: completed})\r\n        .then(function(){console.log(`Document with id ${id} updated`)})\r\n        .catch(function(){console.log(\"Oops, something went wrong!\")});\r\n        this.setState({\r\n            todoItems: todoItems,\r\n        })\r\n    }\r\n\r\n    updateNotes = (id, notes) => {\r\n        db.collection('todos').doc(id).update({notes: notes})\r\n        .then(() => {\r\n            // this.filterTasks(this.state.filterMode, true)\r\n        })\r\n    }\r\n\r\n    // Tools methods\r\n    getAllTasks = () => {\r\n        const currentUser = auth.currentUser;\r\n        db.collection('todos').where('user', '==', currentUser.uid).orderBy('important', 'desc').get() \r\n        .then((result) => {\r\n            const todoItems = result.docs.map((doc) => {\r\n                const {title, important, daily, completed, notes} = doc.data();\r\n                const newTodo = new Todo(doc.id, title, important, daily, notes);\r\n                newTodo.completed = completed;\r\n                return newTodo;\r\n            });\r\n            this.setState({\r\n                todoItems: todoItems,\r\n                filterMode: 'all'\r\n            })\r\n        })\r\n    }\r\n\r\n    getDailyTasks = () => {\r\n        this.filterTasks('daily', true);\r\n    }\r\n\r\n    getImportantTasks = () => {\r\n        this.filterTasks('important', true);\r\n    }\r\n    \r\n    getCompletedTasks = () => {\r\n        this.filterTasks('completed', true);\r\n    }\r\n\r\n    //Reset Daily Tasks\r\n    resetDailyTasks = () => {\r\n        const currentUser = auth.currentUser;\r\n        db.collection('todos').where('user', '==', currentUser.uid).where('daily', \"==\", true).get()\r\n        .then(result => {\r\n            let batch = db.batch();\r\n            result.forEach(doc => {\r\n                const todoRef = db.collection('todos').doc(doc.id);\r\n                batch.update(todoRef, {completed: false});\r\n            })\r\n            batch.commit().then(() => {\r\n                console.log(\"Update Completed\");\r\n                this.getDailyTasks();\r\n            })\r\n        })\r\n    }\r\n\r\n    // Set todos in state by value of attribute\r\n    filterTasks = (att, value) => {\r\n        const currentUser = auth.currentUser;\r\n        db.collection('todos').where('user', '==', currentUser.uid).where(att, \"==\", value).get()\r\n        .then(result => {\r\n            const todoItems = result.docs.map((doc) => {\r\n                const {title, important, daily, completed, notes} = doc.data();\r\n                const newTodo = new Todo(doc.id, title, important, daily, notes);\r\n                newTodo.completed = completed;\r\n                return newTodo;\r\n            });\r\n            this.setState({\r\n                todoItems: todoItems,\r\n                filterMode: att\r\n            })\r\n        })\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div id=\"todo-container\">\r\n                <TodoForm addTodo={this.addTodo}/>\r\n                <TodoTools \r\n                    getDailyTasks={this.getDailyTasks}\r\n                    getAllTasks={this.getAllTasks}\r\n                    getImportantTasks={this.getImportantTasks}\r\n                    getCompletedTasks={this.getCompletedTasks}\r\n                    resetDailyTasks={this.resetDailyTasks}\r\n                    filterMode={this.state.filterMode}\r\n                />\r\n                <TodoList todoItems={this.state.todoItems}\r\n                    deleteTodo={this.deleteTodo}\r\n                    toggleCompleteTodo={this.toggleCompleteTodo}\r\n                    updateNotes={this.updateNotes}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoContainer;","import React from 'react';\r\n\r\n//components\r\nimport Header from './components/Header';\r\nimport TodoContainer from './components/TodoContainer';\r\n\r\nimport './App.css';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      userLoggedIn: false, // user logged in state, controlled at header, where sign up, login buttons are at\r\n    }\r\n  }\r\n\r\n  updateAuthStatus = (value) => {\r\n    this.setState({userLoggedIn: value})\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <Header title=\"Todo\" updateAuthStatus={this.updateAuthStatus} userLoggedIn={this.state.userLoggedIn}/>\r\n        {this.state.userLoggedIn ? <TodoContainer /> : <h2>Please Sign Up Or Login</h2>}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}